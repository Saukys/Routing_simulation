version: '3'

services:
  web1:
    container_name: web1
    build:
      context: ./webservers
      dockerfile: Dockerfile
    environment:
      - SERVER_ID=1
    networks:
      sim_net:
        ipv4_address: 10.10.0.11  

  web2:
    container_name: web2
    build:
      context: ./webservers
      dockerfile: Dockerfile
    environment:
      - SERVER_ID=2
    networks:
      sim_net:
        ipv4_address: 10.10.0.12

  web3:
    container_name: web3
    build:
      context: ./webservers
      dockerfile: Dockerfile
    environment:
      - SERVER_ID=3
    networks:
      sim_net:
        ipv4_address: 10.10.0.13


  router1:
    build:
      context: ./router
    container_name: router1
    networks:
      sim_net:
        ipv4_address: 10.10.0.100
    volumes:
      - ./router/haproxy.cfg:/etc/haproxy/haproxy.cfg
      - ./router/keepalived1.conf:/etc/keepalived/keepalived.conf
    cap_add:
      - NET_ADMIN
    command: sh -c "chmod 644 /etc/keepalived/keepalived.conf; haproxy -f /etc/haproxy/haproxy.cfg & keepalived -nld"

  router2:
    build:
      context: ./router
    container_name: router2
    networks:
      sim_net:
        ipv4_address: 10.10.0.101
    volumes:
      - ./router/haproxy.cfg:/etc/haproxy/haproxy.cfg
      - ./router/keepalived2.conf:/etc/keepalived/keepalived.conf
    cap_add:
      - NET_ADMIN
    command: sh -c "chmod 644 /etc/keepalived/keepalived.conf; haproxy -f /etc/haproxy/haproxy.cfg & keepalived -nld"

  testclient:
    image: curlimages/curl
    container_name: testclient
    networks:
      sim_net:
        ipv4_address: 10.10.0.200
    stdin_open: true
    tty: true
    command: sh -c "while true; do curl -s http://10.10.0.100:80; sleep 1; done"

networks:
  sim_net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.0.0/24